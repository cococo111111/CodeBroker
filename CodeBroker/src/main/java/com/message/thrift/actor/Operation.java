/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.message.thrift.actor;

/**
 * 操作命令
 */
public enum Operation implements org.apache.thrift.TEnum {
  /**
   * 创建NPC
   */
  AREA_CREATE_NPC(0),
  /**
   * 获取空间ID
   */
  AREA_GET_ID(1),
  /**
   * 用户进入空间
   */
  AREA_USER_ENTER_AREA(2),
  /**
   * 用户离开空间
   */
  AREA_USER_LEAVE_AREA(3),
  /**
   * 创建格子
   */
  AREA_CREATE_GRID(4),
  /**
   * 删除格子
   */
  AREA_REMOVE_GRID(5),
  /**
   * 根据格子ID获取格子
   */
  AREA_GET_GRID_BY_ID(6),
  /**
   * 获取全部格子
   */
  AREA_GET_ALL_GRID(7),
  /**
   * 区域广播给所有用户信息
   */
  AREA_BROADCAST_ALL_USER(8),
  USER_IS_CONNECTED(9),
  USER_DISCONNECT(10),
  USER_RECIVE_IOSESSION_MESSAGE(11),
  USER_REUSER_BINDUSER_IOSESSION_ACTOR(12),
  USER_GET_IUSER(13),
  USER_SEND_PACKET_TO_IOSESSION(14),
  /**
   * 用户进入空间
   */
  USER_ENTER_AREA(15),
  /**
   * 用户离开空间
   */
  USER_LEAVE_AREA(16),
  /**
   * 用户进入格子
   */
  USER_ENTER_GRID(17),
  /**
   * 用户离开格子
   */
  USER_LEAVE_GRID(18),
  SESSION_USER_LOGOUT(19),
  SESSION_USER_CONNECT_TO_SERVER(20),
  SESSION_ENTER_WORLD(21),
  SESSION_USER_SEND_PACKET(22),
  SESSION_RECIVE_PACKET(23),
  SESSION_REBIND_USER(24),
  CLUSER_INIT(25),
  CLUSER_HELLO(26),
  CLUSER_SEND(27),
  CLUSER_RECIVE(28),
  WORLD_INITIALIZE(29),
  WORLD_USER_CONNECT_2_WORLD(30),
  WORLD_USER_RECONNECTION_TRY(31),
  WORLD_CREATE_USER_RESULT(32),
  WORLD_NER_SERVER_COMING(33),
  WORLD_HAND_SHAKE(34),
  AREA_MANAGER_CREATE_AREA(35),
  AREA_MANAGER_REMOVE_AREA(36),
  AREA_MANAGER_GET_AREA_BY_ID(37),
  AREA_MANAGER_GET_ALL_AREA(38),
  USER_MANAGER_CREATE_USER(39),
  USER_MANAGER_REMOVE_USER(40),
  USER_MANAGER_CREATE_USER_WITH_SESSION(41);

  private final int value;

  private Operation(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static Operation findByValue(int value) { 
    switch (value) {
      case 0:
        return AREA_CREATE_NPC;
      case 1:
        return AREA_GET_ID;
      case 2:
        return AREA_USER_ENTER_AREA;
      case 3:
        return AREA_USER_LEAVE_AREA;
      case 4:
        return AREA_CREATE_GRID;
      case 5:
        return AREA_REMOVE_GRID;
      case 6:
        return AREA_GET_GRID_BY_ID;
      case 7:
        return AREA_GET_ALL_GRID;
      case 8:
        return AREA_BROADCAST_ALL_USER;
      case 9:
        return USER_IS_CONNECTED;
      case 10:
        return USER_DISCONNECT;
      case 11:
        return USER_RECIVE_IOSESSION_MESSAGE;
      case 12:
        return USER_REUSER_BINDUSER_IOSESSION_ACTOR;
      case 13:
        return USER_GET_IUSER;
      case 14:
        return USER_SEND_PACKET_TO_IOSESSION;
      case 15:
        return USER_ENTER_AREA;
      case 16:
        return USER_LEAVE_AREA;
      case 17:
        return USER_ENTER_GRID;
      case 18:
        return USER_LEAVE_GRID;
      case 19:
        return SESSION_USER_LOGOUT;
      case 20:
        return SESSION_USER_CONNECT_TO_SERVER;
      case 21:
        return SESSION_ENTER_WORLD;
      case 22:
        return SESSION_USER_SEND_PACKET;
      case 23:
        return SESSION_RECIVE_PACKET;
      case 24:
        return SESSION_REBIND_USER;
      case 25:
        return CLUSER_INIT;
      case 26:
        return CLUSER_HELLO;
      case 27:
        return CLUSER_SEND;
      case 28:
        return CLUSER_RECIVE;
      case 29:
        return WORLD_INITIALIZE;
      case 30:
        return WORLD_USER_CONNECT_2_WORLD;
      case 31:
        return WORLD_USER_RECONNECTION_TRY;
      case 32:
        return WORLD_CREATE_USER_RESULT;
      case 33:
        return WORLD_NER_SERVER_COMING;
      case 34:
        return WORLD_HAND_SHAKE;
      case 35:
        return AREA_MANAGER_CREATE_AREA;
      case 36:
        return AREA_MANAGER_REMOVE_AREA;
      case 37:
        return AREA_MANAGER_GET_AREA_BY_ID;
      case 38:
        return AREA_MANAGER_GET_ALL_AREA;
      case 39:
        return USER_MANAGER_CREATE_USER;
      case 40:
        return USER_MANAGER_REMOVE_USER;
      case 41:
        return USER_MANAGER_CREATE_USER_WITH_SESSION;
      default:
        return null;
    }
  }
}
