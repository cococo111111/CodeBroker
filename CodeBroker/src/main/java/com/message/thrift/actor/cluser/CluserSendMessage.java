/**
 * Autogenerated by Thrift Compiler (0.10.0)
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */
package com.message.thrift.actor.cluser;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-24")
public class CluserSendMessage implements org.apache.thrift.TBase<CluserSendMessage, CluserSendMessage._Fields>, java.io.Serializable, Cloneable, Comparable<CluserSendMessage> {
    public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("CluserSendMessage");
    private static final org.apache.thrift.protocol.TField SERVER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("serverId", org.apache.thrift.protocol.TType.I32, (short) 1);
    private static final org.apache.thrift.protocol.TField ACTOR_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("actorPath", org.apache.thrift.protocol.TType.STRING, (short) 2);
    private static final org.apache.thrift.protocol.TField CMD_FIELD_DESC = new org.apache.thrift.protocol.TField("cmd", org.apache.thrift.protocol.TType.I32, (short) 3);
    private static final org.apache.thrift.protocol.TField MESSAGE_RAW_FIELD_DESC = new org.apache.thrift.protocol.TField("messageRaw", org.apache.thrift.protocol.TType.STRING, (short) 4);
    private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new CluserSendMessageStandardSchemeFactory();
    private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new CluserSendMessageTupleSchemeFactory();
    // isset id assignments
    private static final int __SERVERID_ISSET_ID = 0;
    private static final int __CMD_ISSET_ID = 1;

    static {
        java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
        tmpMap.put(_Fields.SERVER_ID, new org.apache.thrift.meta_data.FieldMetaData("serverId", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.ACTOR_PATH, new org.apache.thrift.meta_data.FieldMetaData("actorPath", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
        tmpMap.put(_Fields.CMD, new org.apache.thrift.meta_data.FieldMetaData("cmd", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
        tmpMap.put(_Fields.MESSAGE_RAW, new org.apache.thrift.meta_data.FieldMetaData("messageRaw", org.apache.thrift.TFieldRequirementType.DEFAULT,
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING, true)));
        metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
        org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(CluserSendMessage.class, metaDataMap);
    }

    public int serverId; // required
    public java.lang.String actorPath; // required
    public int cmd; // required
    public java.nio.ByteBuffer messageRaw; // required
    private byte __isset_bitfield = 0;

    public CluserSendMessage() {
    }

    public CluserSendMessage(
            int serverId,
            java.lang.String actorPath,
            int cmd,
            java.nio.ByteBuffer messageRaw) {
        this();
        this.serverId = serverId;
        setServerIdIsSet(true);
        this.actorPath = actorPath;
        this.cmd = cmd;
        setCmdIsSet(true);
        this.messageRaw = org.apache.thrift.TBaseHelper.copyBinary(messageRaw);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public CluserSendMessage(CluserSendMessage other) {
        __isset_bitfield = other.__isset_bitfield;
        this.serverId = other.serverId;
        if (other.isSetActorPath()) {
            this.actorPath = other.actorPath;
        }
        this.cmd = other.cmd;
        if (other.isSetMessageRaw()) {
            this.messageRaw = org.apache.thrift.TBaseHelper.copyBinary(other.messageRaw);
        }
    }

    private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
        return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
    }

    public CluserSendMessage deepCopy() {
        return new CluserSendMessage(this);
    }

    @Override
    public void clear() {
        setServerIdIsSet(false);
        this.serverId = 0;
        this.actorPath = null;
        setCmdIsSet(false);
        this.cmd = 0;
        this.messageRaw = null;
    }

    public int getServerId() {
        return this.serverId;
    }

    public CluserSendMessage setServerId(int serverId) {
        this.serverId = serverId;
        setServerIdIsSet(true);
        return this;
    }

    public void unsetServerId() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __SERVERID_ISSET_ID);
    }

    /** Returns true if field serverId is set (has been assigned a value) and false otherwise */
    public boolean isSetServerId() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __SERVERID_ISSET_ID);
    }

    public void setServerIdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __SERVERID_ISSET_ID, value);
    }

    public java.lang.String getActorPath() {
        return this.actorPath;
    }

    public CluserSendMessage setActorPath(java.lang.String actorPath) {
        this.actorPath = actorPath;
        return this;
    }

    public void unsetActorPath() {
        this.actorPath = null;
    }

    /** Returns true if field actorPath is set (has been assigned a value) and false otherwise */
    public boolean isSetActorPath() {
        return this.actorPath != null;
    }

    public void setActorPathIsSet(boolean value) {
        if (!value) {
            this.actorPath = null;
        }
    }

    public int getCmd() {
        return this.cmd;
    }

    public CluserSendMessage setCmd(int cmd) {
        this.cmd = cmd;
        setCmdIsSet(true);
        return this;
    }

    public void unsetCmd() {
        __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CMD_ISSET_ID);
    }

    /** Returns true if field cmd is set (has been assigned a value) and false otherwise */
    public boolean isSetCmd() {
        return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CMD_ISSET_ID);
    }

    public void setCmdIsSet(boolean value) {
        __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CMD_ISSET_ID, value);
    }

    public byte[] getMessageRaw() {
        setMessageRaw(org.apache.thrift.TBaseHelper.rightSize(messageRaw));
        return messageRaw == null ? null : messageRaw.array();
    }

    public CluserSendMessage setMessageRaw(java.nio.ByteBuffer messageRaw) {
        this.messageRaw = org.apache.thrift.TBaseHelper.copyBinary(messageRaw);
        return this;
    }

    public java.nio.ByteBuffer bufferForMessageRaw() {
        return org.apache.thrift.TBaseHelper.copyBinary(messageRaw);
    }

    public CluserSendMessage setMessageRaw(byte[] messageRaw) {
        this.messageRaw = messageRaw == null ? (java.nio.ByteBuffer) null : java.nio.ByteBuffer.wrap(messageRaw.clone());
        return this;
    }

    public void unsetMessageRaw() {
        this.messageRaw = null;
    }

    /** Returns true if field messageRaw is set (has been assigned a value) and false otherwise */
    public boolean isSetMessageRaw() {
        return this.messageRaw != null;
    }

    public void setMessageRawIsSet(boolean value) {
        if (!value) {
            this.messageRaw = null;
        }
    }

    public void setFieldValue(_Fields field, java.lang.Object value) {
        switch (field) {
            case SERVER_ID:
                if (value == null) {
                    unsetServerId();
                } else {
                    setServerId((java.lang.Integer) value);
                }
                break;

            case ACTOR_PATH:
                if (value == null) {
                    unsetActorPath();
                } else {
                    setActorPath((java.lang.String) value);
                }
                break;

            case CMD:
                if (value == null) {
                    unsetCmd();
                } else {
                    setCmd((java.lang.Integer) value);
                }
                break;

            case MESSAGE_RAW:
                if (value == null) {
                    unsetMessageRaw();
                } else {
                    if (value instanceof byte[]) {
                        setMessageRaw((byte[]) value);
                    } else {
                        setMessageRaw((java.nio.ByteBuffer) value);
                    }
                }
                break;

        }
    }

    public java.lang.Object getFieldValue(_Fields field) {
        switch (field) {
            case SERVER_ID:
                return getServerId();

            case ACTOR_PATH:
                return getActorPath();

            case CMD:
                return getCmd();

            case MESSAGE_RAW:
                return getMessageRaw();

        }
        throw new java.lang.IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
        if (field == null) {
            throw new java.lang.IllegalArgumentException();
        }

        switch (field) {
            case SERVER_ID:
                return isSetServerId();
            case ACTOR_PATH:
                return isSetActorPath();
            case CMD:
                return isSetCmd();
            case MESSAGE_RAW:
                return isSetMessageRaw();
        }
        throw new java.lang.IllegalStateException();
    }

    @Override
    public boolean equals(java.lang.Object that) {
        if (that == null)
            return false;
        if (that instanceof CluserSendMessage)
            return this.equals((CluserSendMessage) that);
        return false;
    }

    public boolean equals(CluserSendMessage that) {
        if (that == null)
            return false;
        if (this == that)
            return true;

        boolean this_present_serverId = true;
        boolean that_present_serverId = true;
        if (this_present_serverId || that_present_serverId) {
            if (!(this_present_serverId && that_present_serverId))
                return false;
            if (this.serverId != that.serverId)
                return false;
        }

        boolean this_present_actorPath = true && this.isSetActorPath();
        boolean that_present_actorPath = true && that.isSetActorPath();
        if (this_present_actorPath || that_present_actorPath) {
            if (!(this_present_actorPath && that_present_actorPath))
                return false;
            if (!this.actorPath.equals(that.actorPath))
                return false;
        }

        boolean this_present_cmd = true;
        boolean that_present_cmd = true;
        if (this_present_cmd || that_present_cmd) {
            if (!(this_present_cmd && that_present_cmd))
                return false;
            if (this.cmd != that.cmd)
                return false;
        }

        boolean this_present_messageRaw = true && this.isSetMessageRaw();
        boolean that_present_messageRaw = true && that.isSetMessageRaw();
        if (this_present_messageRaw || that_present_messageRaw) {
            if (!(this_present_messageRaw && that_present_messageRaw))
                return false;
            if (!this.messageRaw.equals(that.messageRaw))
                return false;
        }

        return true;
    }

    @Override
    public int hashCode() {
        int hashCode = 1;

        hashCode = hashCode * 8191 + serverId;

        hashCode = hashCode * 8191 + ((isSetActorPath()) ? 131071 : 524287);
        if (isSetActorPath())
            hashCode = hashCode * 8191 + actorPath.hashCode();

        hashCode = hashCode * 8191 + cmd;

        hashCode = hashCode * 8191 + ((isSetMessageRaw()) ? 131071 : 524287);
        if (isSetMessageRaw())
            hashCode = hashCode * 8191 + messageRaw.hashCode();

        return hashCode;
    }

    @Override
    public int compareTo(CluserSendMessage other) {
        if (!getClass().equals(other.getClass())) {
            return getClass().getName().compareTo(other.getClass().getName());
        }

        int lastComparison = 0;

        lastComparison = java.lang.Boolean.valueOf(isSetServerId()).compareTo(other.isSetServerId());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetServerId()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.serverId, other.serverId);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetActorPath()).compareTo(other.isSetActorPath());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetActorPath()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.actorPath, other.actorPath);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetCmd()).compareTo(other.isSetCmd());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetCmd()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cmd, other.cmd);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        lastComparison = java.lang.Boolean.valueOf(isSetMessageRaw()).compareTo(other.isSetMessageRaw());
        if (lastComparison != 0) {
            return lastComparison;
        }
        if (isSetMessageRaw()) {
            lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.messageRaw, other.messageRaw);
            if (lastComparison != 0) {
                return lastComparison;
            }
        }
        return 0;
    }

    public _Fields fieldForId(int fieldId) {
        return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
        scheme(iprot).read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
        scheme(oprot).write(oprot, this);
    }

    @Override
    public java.lang.String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("CluserSendMessage(");
        boolean first = true;

        sb.append("serverId:");
        sb.append(this.serverId);
        first = false;
        if (!first) sb.append(", ");
        sb.append("actorPath:");
        if (this.actorPath == null) {
            sb.append("null");
        } else {
            sb.append(this.actorPath);
        }
        first = false;
        if (!first) sb.append(", ");
        sb.append("cmd:");
        sb.append(this.cmd);
        first = false;
        if (!first) sb.append(", ");
        sb.append("messageRaw:");
        if (this.messageRaw == null) {
            sb.append("null");
        } else {
            org.apache.thrift.TBaseHelper.toString(this.messageRaw, sb);
        }
        first = false;
        sb.append(")");
        return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
        // check for required fields
        // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
        try {
            write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
        try {
            // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
            __isset_bitfield = 0;
            read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
        } catch (org.apache.thrift.TException te) {
            throw new java.io.IOException(te);
        }
    }

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
        SERVER_ID((short) 1, "serverId"),
        ACTOR_PATH((short) 2, "actorPath"),
        CMD((short) 3, "cmd"),
        MESSAGE_RAW((short) 4, "messageRaw");

        private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

        static {
            for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
                byName.put(field.getFieldName(), field);
            }
        }

        private final short _thriftId;
        private final java.lang.String _fieldName;

        _Fields(short thriftId, java.lang.String fieldName) {
            _thriftId = thriftId;
            _fieldName = fieldName;
        }

        /**
         * Find the _Fields constant that matches fieldId, or null if its not found.
         */
        public static _Fields findByThriftId(int fieldId) {
            switch (fieldId) {
                case 1: // SERVER_ID
                    return SERVER_ID;
                case 2: // ACTOR_PATH
                    return ACTOR_PATH;
                case 3: // CMD
                    return CMD;
                case 4: // MESSAGE_RAW
                    return MESSAGE_RAW;
                default:
                    return null;
            }
        }

        /**
         * Find the _Fields constant that matches fieldId, throwing an exception
         * if it is not found.
         */
        public static _Fields findByThriftIdOrThrow(int fieldId) {
            _Fields fields = findByThriftId(fieldId);
            if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
            return fields;
        }

        /**
         * Find the _Fields constant that matches name, or null if its not found.
         */
        public static _Fields findByName(java.lang.String name) {
            return byName.get(name);
        }

        public short getThriftFieldId() {
            return _thriftId;
        }

        public java.lang.String getFieldName() {
            return _fieldName;
        }
    }

    private static class CluserSendMessageStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public CluserSendMessageStandardScheme getScheme() {
            return new CluserSendMessageStandardScheme();
        }
    }

    private static class CluserSendMessageStandardScheme extends org.apache.thrift.scheme.StandardScheme<CluserSendMessage> {

        public void read(org.apache.thrift.protocol.TProtocol iprot, CluserSendMessage struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TField schemeField;
            iprot.readStructBegin();
            while (true) {
                schemeField = iprot.readFieldBegin();
                if (schemeField.type == org.apache.thrift.protocol.TType.STOP) {
                    break;
                }
                switch (schemeField.id) {
                    case 1: // SERVER_ID
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.serverId = iprot.readI32();
                            struct.setServerIdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 2: // ACTOR_PATH
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.actorPath = iprot.readString();
                            struct.setActorPathIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 3: // CMD
                        if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                            struct.cmd = iprot.readI32();
                            struct.setCmdIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    case 4: // MESSAGE_RAW
                        if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                            struct.messageRaw = iprot.readBinary();
                            struct.setMessageRawIsSet(true);
                        } else {
                            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                        }
                        break;
                    default:
                        org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
                }
                iprot.readFieldEnd();
            }
            iprot.readStructEnd();

            // check for required fields of primitive type, which can't be checked in the validate method
            struct.validate();
        }

        public void write(org.apache.thrift.protocol.TProtocol oprot, CluserSendMessage struct) throws org.apache.thrift.TException {
            struct.validate();

            oprot.writeStructBegin(STRUCT_DESC);
            oprot.writeFieldBegin(SERVER_ID_FIELD_DESC);
            oprot.writeI32(struct.serverId);
            oprot.writeFieldEnd();
            if (struct.actorPath != null) {
                oprot.writeFieldBegin(ACTOR_PATH_FIELD_DESC);
                oprot.writeString(struct.actorPath);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldBegin(CMD_FIELD_DESC);
            oprot.writeI32(struct.cmd);
            oprot.writeFieldEnd();
            if (struct.messageRaw != null) {
                oprot.writeFieldBegin(MESSAGE_RAW_FIELD_DESC);
                oprot.writeBinary(struct.messageRaw);
                oprot.writeFieldEnd();
            }
            oprot.writeFieldStop();
            oprot.writeStructEnd();
        }

    }

    private static class CluserSendMessageTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
        public CluserSendMessageTupleScheme getScheme() {
            return new CluserSendMessageTupleScheme();
        }
    }

    private static class CluserSendMessageTupleScheme extends org.apache.thrift.scheme.TupleScheme<CluserSendMessage> {

        @Override
        public void write(org.apache.thrift.protocol.TProtocol prot, CluserSendMessage struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet optionals = new java.util.BitSet();
            if (struct.isSetServerId()) {
                optionals.set(0);
            }
            if (struct.isSetActorPath()) {
                optionals.set(1);
            }
            if (struct.isSetCmd()) {
                optionals.set(2);
            }
            if (struct.isSetMessageRaw()) {
                optionals.set(3);
            }
            oprot.writeBitSet(optionals, 4);
            if (struct.isSetServerId()) {
                oprot.writeI32(struct.serverId);
            }
            if (struct.isSetActorPath()) {
                oprot.writeString(struct.actorPath);
            }
            if (struct.isSetCmd()) {
                oprot.writeI32(struct.cmd);
            }
            if (struct.isSetMessageRaw()) {
                oprot.writeBinary(struct.messageRaw);
            }
        }

        @Override
        public void read(org.apache.thrift.protocol.TProtocol prot, CluserSendMessage struct) throws org.apache.thrift.TException {
            org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
            java.util.BitSet incoming = iprot.readBitSet(4);
            if (incoming.get(0)) {
                struct.serverId = iprot.readI32();
                struct.setServerIdIsSet(true);
            }
            if (incoming.get(1)) {
                struct.actorPath = iprot.readString();
                struct.setActorPathIsSet(true);
            }
            if (incoming.get(2)) {
                struct.cmd = iprot.readI32();
                struct.setCmdIsSet(true);
            }
            if (incoming.get(3)) {
                struct.messageRaw = iprot.readBinary();
                struct.setMessageRawIsSet(true);
            }
        }
    }
}

