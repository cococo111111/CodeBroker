CodeBroker
	{
		akka {

			  log-dead-letters = 10
			  log-dead-letters-during-shutdown = on
			  loggers = ["akka.event.slf4j.Slf4jLogger"]
			  loglevel = "DEBUG"
			  actor {
				provider = "akka.cluster.ClusterActorRefProvider"

				  serializers
					{
					  java = "akka.serialization.JavaSerializer"
					  proto = "akka.remote.serialization.ProtobufSerializer"
					}
					serialization-bindings
					{
					   "akka.cluster.ClusterMessage" = akka-cluster
					   "java.io.Serializable" = java
					   "com.google.protobuf.Message" = proto
					}
				}
				
				remote {
					artery {
					  enabled = off
					  canonical {
						port = 35520
						hostname = "<getHostAddress>"
					  }  
					  bind {
						port = "3551"
						hostname = "192.168.0.127"
					  }   
					
				}
				
				
				cluster 
				{
	  
						seed-nodes = [
									  "akka.tcp://CodeBroker@192.168.0.127:2551",
									  "akka.tcp://CodeBroker@192.168.0.202:2551"
									  ]
									  
						seed-node-timeout = 5s
						down-removal-margin = off

						quarantine-removed-node-after=30s
						allow-weakly-up-members = on

						log-info = on
						jmx.enabled = on
						jmx.multi-mbeans-in-same-jvm = off
						# how often should the node send out gossip information?
						gossip-interval = 1s
						gossip-time-to-live = 2s
						leader-actions-interval = 1s
						unreachable-nodes-reaper-interval = 1s
						
						scheduler {
						  tick-duration = 33ms
						  ticks-per-wheel = 512
						}

						debug {
						  verbose-heartbeat-logging = off
						}
						
						

				}
		}
    }
 }
  akka.extensions = ["akka.cluster.pubsub.DistributedPubSub"]